import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Loader2, Upload, CheckCircle, AlertCircle } from 'lucide-react';
import { useMutation } from '@tanstack/react-query';
import { apiRequest } from '@/lib/queryClient';

interface ImportResult {
  success: boolean;
  stats: {
    items: number;
    quotations: number;
    quotation_items: number;
    purchase_orders: number;
    purchase_order_items: number;
  };
}

export default function ImportData() {
  const [result, setResult] = useState<ImportResult | null>(null);

  const importMutation = useMutation({
    mutationFn: async (): Promise<ImportResult> => {
      const response = await fetch('/api/import-data', { 
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    },
    onSuccess: (data: ImportResult) => {
      setResult(data);
    },
    onError: (error) => {
      console.error('Import failed:', error);
    }
  });

  const handleImport = () => {
    setResult(null);
    importMutation.mutate();
  };

  return (
    <div className="max-w-4xl mx-auto p-6 space-y-6">
      <div className="space-y-2">
        <h1 className="text-3xl font-bold">ุงุณุชูุฑุงุฏ ุงูุจูุงูุงุช ูู Excel</h1>
        <p className="text-muted-foreground">
          ุงุณุชูุฑุงุฏ ุงูุจูุงูุงุช ุงููุญุถุฑุฉ ูู ููู Excel ุฅูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
        </p>
      </div>

      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Upload className="h-5 w-5" />
            ุงุณุชูุฑุงุฏ ุงูุจูุงูุงุช
          </CardTitle>
          <CardDescription>
            ุณูุชู ุงุณุชูุฑุงุฏ ุงูุจูุงูุงุช ุงูุชุงููุฉ:
            <ul className="list-disc list-inside mt-2 space-y-1">
              <li>ุงูุจููุฏ ูุงูุฃุฌุฒุงุก</li>
              <li>ุทูุจุงุช ุงูุชุณุนูุฑ</li>
              <li>ุจููุฏ ุทูุจุงุช ุงูุชุณุนูุฑ</li>
              <li>ุฃูุงูุฑ ุงูุดุฑุงุก</li>
              <li>ุจููุฏ ุฃูุงูุฑ ุงูุดุฑุงุก</li>
            </ul>
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <Button 
            onClick={handleImport} 
            disabled={importMutation.isPending}
            className="w-full"
            size="lg"
          >
            {importMutation.isPending ? (
              <>
                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                ุฌุงุฑู ุงูุงุณุชูุฑุงุฏ...
              </>
            ) : (
              <>
                <Upload className="mr-2 h-4 w-4" />
                ุจุฏุก ุงูุงุณุชูุฑุงุฏ
              </>
            )}
          </Button>

          {importMutation.error && (
            <Alert variant="destructive">
              <AlertCircle className="h-4 w-4" />
              <AlertDescription>
                ุฎุทุฃ ูู ุงูุงุณุชูุฑุงุฏ: {importMutation.error.message}
              </AlertDescription>
            </Alert>
          )}

          {result && (
            <Alert className={result.success ? "border-green-500 bg-green-50" : "border-red-500 bg-red-50"}>
              {result.success ? (
                <CheckCircle className="h-4 w-4 text-green-600" />
              ) : (
                <AlertCircle className="h-4 w-4 text-red-600" />
              )}
              <AlertDescription className={result.success ? "text-green-800" : "text-red-800"}>
                {result.success ? (
                  <div className="space-y-2">
                    <p className="font-semibold">ุชู ุงูุงุณุชูุฑุงุฏ ุจูุฌุงุญ! ๐</p>
                    <div className="grid grid-cols-2 gap-2 text-sm">
                      <div>ุงูุจููุฏ: {result.stats.items}</div>
                      <div>ุทูุจุงุช ุงูุชุณุนูุฑ: {result.stats.quotations}</div>
                      <div>ุจููุฏ ุทูุจุงุช ุงูุชุณุนูุฑ: {result.stats.quotation_items}</div>
                      <div>ุฃูุงูุฑ ุงูุดุฑุงุก: {result.stats.purchase_orders}</div>
                      <div>ุจููุฏ ุฃูุงูุฑ ุงูุดุฑุงุก: {result.stats.purchase_order_items}</div>
                    </div>
                  </div>
                ) : (
                  "ูุดู ูู ุงูุงุณุชูุฑุงุฏ. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู."
                )}
              </AlertDescription>
            </Alert>
          )}
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>ูุนูููุงุช ูููุฉ</CardTitle>
        </CardHeader>
        <CardContent className="space-y-3">
          <div className="space-y-2">
            <h4 className="font-semibold">ุงูุจูุงูุงุช ุงููุณุชูุฑุฏุฉ:</h4>
            <ul className="list-disc list-inside text-sm space-y-1 text-muted-foreground">
              <li>ุชู ุงุณุชุฎุฑุงุฌ 2767 ุณุฌู ุตุงูุญ ูู ููู Excel</li>
              <li>ุงูุจูุงูุงุช ููุฑูุกุฉ ูู ุงูุตู 13 ููุง ูู ูุญุฏุฏ</li>
              <li>ูุชู ุฑุจุท ุงูุจููุฏ ุจุทูุจุงุช ุงูุชุณุนูุฑ ูุฃูุงูุฑ ุงูุดุฑุงุก</li>
              <li>ุฃุณุนุงุฑ ุงูุนููุงุก ูุญุณูุจุฉ ูู ูุชูุณุท ุฃุณุนุงุฑ ุทูุจุงุช ุงูุชุณุนูุฑ</li>
            </ul>
          </div>
          
          <div className="space-y-2">
            <h4 className="font-semibold">ุชูุจููุงุช:</h4>
            <ul className="list-disc list-inside text-sm space-y-1 text-muted-foreground">
              <li>ุงูุนูููุฉ ุชุณุชุบุฑู ุนุฏุฉ ุฏูุงุฆู ุญุณุจ ุญุฌู ุงูุจูุงูุงุช</li>
              <li>ูุง ุชุบูู ุงูุตูุญุฉ ุฃุซูุงุก ุนูููุฉ ุงูุงุณุชูุฑุงุฏ</li>
              <li>ูููุตุญ ุจุนูู ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูุจู ุงูุงุณุชูุฑุงุฏ</li>
            </ul>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}